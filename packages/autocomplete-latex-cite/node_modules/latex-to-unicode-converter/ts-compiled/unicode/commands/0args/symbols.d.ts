import { ZeroArgsExpander } from "./expander";
export declare const characterUnicodeChart: {
    "leftrightsquigarrow": string;
    "Longleftrightarrow": string;
    "blacktriangleright": string;
    "longleftrightarrow": string;
    "blacktriangledown": string;
    "blacktriangleleft": string;
    "leftrightharpoons": string;
    "rightleftharpoons": string;
    "twoheadrightarrow": string;
    "circlearrowright": string;
    "downharpoonright": string;
    "rightharpoondown": string;
    "rightrightarrows": string;
    "twoheadleftarrow": string;
    "vartriangleright": string;
    "bigtriangledown": string;
    "circlearrowleft": string;
    "curvearrowright": string;
    "downharpoonleft": string;
    "leftharpoondown": string;
    "leftrightarrows": string;
    "rightleftarrows": string;
    "rightsquigarrow": string;
    "rightthreetimes": string;
    "trianglerighteq": string;
    "vartriangleleft": string;
    "Leftrightarrow": string;
    "Longrightarrow": string;
    "curvearrowleft": string;
    "dashrightarrow": string;
    "doublebarwedge": string;
    "downdownarrows": string;
    "hookrightarrow": string;
    "leftleftarrows": string;
    "leftrightarrow": string;
    "leftthreetimes": string;
    "longrightarrow": string;
    "looparrowright": string;
    "rightarrowtail": string;
    "rightharpoonup": string;
    "sphericalangle": string;
    "textregistered": string;
    "trianglelefteq": string;
    "upharpoonright": string;
    "Longleftarrow": string;
    "bigtriangleup": string;
    "blacktriangle": string;
    "dashleftarrow": string;
    "divideontimes": string;
    "fallingdotseq": string;
    "hookleftarrow": string;
    "leftarrowtail": string;
    "leftharpoonup": string;
    "longleftarrow": string;
    "looparrowleft": string;
    "measuredangle": string;
    "shortparallel": string;
    "smallsetminus": string;
    "texttrademark": string;
    "triangleright": string;
    "upharpoonleft": string;
    "blacklozenge": string;
    "risingdotseq": string;
    "triangledown": string;
    "triangleleft": string;
    "Rrightarrow": string;
    "Updownarrow": string;
    "backepsilon": string;
    "blacksquare": string;
    "circledcirc": string;
    "circleddash": string;
    "curlyeqprec": string;
    "curlyeqsucc": string;
    "diamondsuit": string;
    "preccurlyeq": string;
    "succcurlyeq": string;
    "textgreater": string;
    "thickapprox": string;
    "updownarrow": string;
    "vartriangle": string;
    "Lleftarrow": string;
    "Rightarrow": string;
    "circledast": string;
    "complement": string;
    "curlywedge": string;
    "longmapsto": string;
    "registered": string;
    "rightarrow": string;
    "smallfrown": string;
    "smallsmile": string;
    "sqsubseteq": string;
    "sqsupseteq": string;
    "textlangle": string;
    "textrangle": string;
    "upuparrows": string;
    "varepsilon": string;
    "varnothing": string;
    "Downarrow": string;
    "Leftarrow": string;
    "backprime": string;
    "bigotimes": string;
    "centerdot": string;
    "copyright": string;
    "downarrow": string;
    "gtreqless": string;
    "heartsuit": string;
    "leftarrow": string;
    "lesseqgtr": string;
    "pitchfork": string;
    "spadesuit": string;
    "therefore": string;
    "trademark": string;
    "triangleq": string;
    "varpropto": string;
    "approxeq": string;
    "barwedge": string;
    "bigoplus": string;
    "bigsqcup": string;
    "biguplus": string;
    "bigwedge": string;
    "boxminus": string;
    "boxtimes": string;
    "circledS": string;
    "clubsuit": string;
    "curlyvee": string;
    "doteqdot": string;
    "emptyset": string;
    "intercal": string;
    "leqslant": string;
    "multimap": string;
    "parallel": string;
    "setminus": string;
    "sqsubset": string;
    "sqsupset": string;
    "subseteq": string;
    "supseteq": string;
    "textless": string;
    "thicksim": string;
    "triangle": string;
    "varkappa": string;
    "varsigma": string;
    "vartheta": string;
    "Diamond": string;
    "Uparrow": string;
    "Upsilon": string;
    "backsim": string;
    "because": string;
    "between": string;
    "bigodot": string;
    "bigstar": string;
    "boxplus": string;
    "ddagger": string;
    "diamond": string;
    "digamma": string;
    "dotplus": string;
    "epsilon": string;
    "gtrless": string;
    "implies": string;
    "leadsto": string;
    "lessdot": string;
    "lessgtr": string;
    "lesssim": string;
    "lozenge": string;
    "natural": string;
    "nearrow": string;
    "nexists": string;
    "nwarrow": string;
    "partial": string;
    "pilcrow": string;
    "precsim": string;
    "searrow": string;
    "section": string;
    "succsim": string;
    "swarrow": string;
    "textbar": string;
    "uparrow": string;
    "upsilon": string;
    "Bumpeq": string;
    "Lambda": string;
    "Subset": string;
    "Supset": string;
    "Vvdash": string;
    "approx": string;
    "bigcap": string;
    "bigcup": string;
    "bigvee": string;
    "bowtie": string;
    "boxdot": string;
    "bullet": string;
    "bumpeq": string;
    "circeq": string;
    "coprod": string;
    "dagger": string;
    "daleth": string;
    "degree": string;
    "eqcirc": string;
    "exists": string;
    "forall": string;
    "gtrdot": string;
    "gtrsim": string;
    "hslash": string;
    "lambda": string;
    "lfloor": string;
    "ltimes": string;
    "mapsto": string;
    "models": string;
    "ominus": string;
    "oslash": string;
    "otimes": string;
    "preceq": string;
    "propto": string;
    "rfloor": string;
    "rtimes": string;
    "square": string;
    "subset": string;
    "succeq": string;
    "supset": string;
    "varphi": string;
    "varrho": string;
    "veebar": string;
    "Delta": string;
    "Gamma": string;
    "Omega": string;
    "Theta": string;
    "Vdash": string;
    "aleph": string;
    "Alpha": string;
    "alpha": string;
    "angle": string;
    "asymp": string;
    "cdots": string;
    "cents": string;
    "dashv": string;
    "ddots": string;
    "delta": string;
    "doteq": string;
    "equiv": string;
    "frown": string;
    "gamma": string;
    "gimel": string;
    "infty": string;
    "kappa": string;
    "Kappa": string;
    "lceil": string;
    "nabla": string;
    "notin": string;
    "omega": string;
    "oplus": string;
    "pound": string;
    "prime": string;
    "qquad": string;
    "rceil": string;
    "sharp": string;
    "sigma": string;
    "simeq": string;
    "smile": string;
    "space": string;
    "sqcap": string;
    "sqcup": string;
    "theta": string;
    "times": string;
    "unlhd": string;
    "unrhd": string;
    "uplus": string;
    "vDash": string;
    "varpi": string;
    "vdash": string;
    "vdots": string;
    "wedge": string;
    "Finv": string;
    "Join": string;
    "atop": string;
    "beta": string;
    "Beta": string;
    "beth": string;
    "cdot": string;
    "circ": string;
    "cong": string;
    "dots": string;
    "euro": string;
    "flat": string;
    "geqq": string;
    "hbar": string;
    "iota": string;
    "leqq": string;
    "odot": string;
    "oint": string;
    "perp": string;
    "prec": string;
    "prod": string;
    "quad": string;
    "star": string;
    "succ": string;
    "surd": string;
    "zeta": string;
    "Box": string;
    "Cap": string;
    "Cup": string;
    "Lsh": string;
    "Phi": string;
    "Psi": string;
    "Rsh": string;
    "ast": string;
    "bot": string;
    "cap": string;
    "chi": string;
    "Chi": string;
    "cup": string;
    "div": string;
    "ell": string;
    "eta": string;
    "eth": string;
    "geq": string;
    "ggg": string;
    "int": string;
    "leq": string;
    "lhd": string;
    "lll": string;
    "mho": string;
    "mid": string;
    "neg": string;
    "neq": string;
    "phi": string;
    "psi": string;
    "rhd": string;
    "rho": string;
    "Rho": string;
    "sim": string;
    "sum": string;
    "tau": string;
    "Tau": string;
    "top": string;
    "vee": string;
    "Im": string;
    "Pi": string;
    "Re": string;
    "Xi": string;
    "ge": string;
    "gg": string;
    "in": string;
    "le": string;
    "ll": string;
    "mp": string;
    "mu": string;
    "Mu": string;
    "ni": string;
    "nu": string;
    "Nu": string;
    "pi": string;
    "pm": string;
    "wp": string;
    "wr": string;
    "xi": string;
    "Omicron": string;
    "omicron": string;
    "textdollar": string;
    "textquotesingle": string;
    "textbackslash": string;
    "textasciigrave": string;
    "lbrace": string;
    "vert": string;
    "rbrace": string;
    "textasciitilde": string;
    "textexclamdown": string;
    "textcent": string;
    "textsterling": string;
    "textcurrency": string;
    "textyen": string;
    "textbrokenbar": string;
    "textsection": string;
    "textasciidieresis": string;
    "textcopyright": string;
    "textordfeminine": string;
    "guillemotleft": string;
    "lnot": string;
    "textasciimacron": string;
    "textdegree": string;
    "textasciiacute": string;
    "textparagraph": string;
    "textordmasculine": string;
    "guillemotright": string;
    "textonequarter": string;
    "textonehalf": string;
    "textthreequarters": string;
    "textquestiondown": string;
    "AA": string;
    "AE": string;
    "DH": string;
    "texttimes": string;
    "TH": string;
    "ss": string;
    "aa": string;
    "ae": string;
    "dh": string;
    "th": string;
    "DJ": string;
    "dj": string;
    "Elzxh": string;
    "i": string;
    "NG": string;
    "ng": string;
    "OE": string;
    "oe": string;
    "texthvlig": string;
    "textnrleg": string;
    "textdoublepipe": string;
    "Elztrna": string;
    "Elztrnsa": string;
    "Elzopeno": string;
    "Elzrtld": string;
    "Elzschwa": string;
    "Elzpgamma": string;
    "Elzpbgam": string;
    "Elztrnh": string;
    "Elzbtdl": string;
    "Elzrtll": string;
    "Elztrnm": string;
    "Elztrnmlr": string;
    "Elzltlmr": string;
    "Elzltln": string;
    "Elzrtln": string;
    "Elzclomeg": string;
    "textphi": string;
    "Elztrnr": string;
    "Elztrnrl": string;
    "Elzrttrnr": string;
    "Elzrl": string;
    "Elzrtlr": string;
    "Elzfhr": string;
    "Elzrtls": string;
    "Elzesh": string;
    "Elztrnt": string;
    "Elzrtlt": string;
    "Elzpupsil": string;
    "Elzpscrv": string;
    "Elzinvv": string;
    "Elzinvw": string;
    "Elztrny": string;
    "Elzrtlz": string;
    "Elzyogh": string;
    "Elzglst": string;
    "Elzreglst": string;
    "Elzinglst": string;
    "textturnk": string;
    "Elzdyogh": string;
    "Elztesh": string;
    "textasciicaron": string;
    "Elzverts": string;
    "Elzverti": string;
    "Elzlmrk": string;
    "Elzhlmrk": string;
    "Elzsbrhr": string;
    "Elzsblhr": string;
    "Elzrais": string;
    "Elzlow": string;
    "textasciibreve": string;
    "textperiodcentered": string;
    "texttildelow": string;
    "Epsilon": string;
    "Zeta": string;
    "Eta": string;
    "Iota": string;
    "Sigma": string;
    "texttheta": string;
    "textvartheta": string;
    "Stigma": string;
    "Digamma": string;
    "Koppa": string;
    "Sampi": string;
    "textTheta": string;
    "textendash": string;
    "textemdash": string;
    "Vert": string;
    "Elzreapos": string;
    "textquotedblleft": string;
    "textquotedblright": string;
    "textdagger": string;
    "textdaggerdbl": string;
    "textbullet": string;
    "ldots": string;
    "textperthousand": string;
    "textpertenthousand": string;
    "guilsinglleft": string;
    "guilsinglright": string;
    "nolinebreak": string;
    "Elzxrat": string;
    "nleftarrow": string;
    "nrightarrow": string;
    "arrowwaveleft": string;
    "arrowwaveright": string;
    "nleftrightarrow": string;
    "dblarrowupdown": string;
    "nLeftarrow": string;
    "nLeftrightarrow": string;
    "nRightarrow": string;
    "DownArrowUpArrow": string;
    "rightangle": string;
    "nmid": string;
    "nparallel": string;
    "surfintegral": string;
    "volintegral": string;
    "clwintegral": string;
    "Colon": string;
    "homothetic": string;
    "lazysinv": string;
    "NotEqualTilde": string;
    "approxnotequal": string;
    "tildetrpl": string;
    "allequal": string;
    "NotHumpDownHump": string;
    "NotHumpEqual": string;
    "estimates": string;
    "starequal": string;
    "lneqq": string;
    "lvertneqq": string;
    "gneqq": string;
    "gvertneqq": string;
    "NotLessLess": string;
    "NotGreaterGreater": string;
    "lessequivlnt": string;
    "greaterequivlnt": string;
    "notlessgreater": string;
    "notgreaterless": string;
    "precapprox": string;
    "NotPrecedesTilde": string;
    "succapprox": string;
    "NotSucceedsTilde": string;
    "subsetneq": string;
    "varsubsetneqq": string;
    "supsetneq": string;
    "varsupsetneq": string;
    "NotSquareSubset": string;
    "NotSquareSuperset": string;
    "truestate": string;
    "forcesextra": string;
    "VDash": string;
    "nvdash": string;
    "nvDash": string;
    "nVdash": string;
    "nVDash": string;
    "original": string;
    "image": string;
    "hermitconjmatrix": string;
    "rightanglearc": string;
    "backsimeq": string;
    "verymuchless": string;
    "verymuchgreater": string;
    "Elzsqspne": string;
    "lnsim": string;
    "gnsim": string;
    "precedesnotsimilar": string;
    "succnsim": string;
    "ntriangleleft": string;
    "ntriangleright": string;
    "ntrianglelefteq": string;
    "ntrianglerighteq": string;
    "upslopeellipsis": string;
    "downslopeellipsis": string;
    "perspcorrespond": string;
    "recorder": string;
    "ulcorner": string;
    "urcorner": string;
    "llcorner": string;
    "lrcorner": string;
    "langle": string;
    "rangle": string;
    "Elzdlcorn": string;
    "lmoustache": string;
    "rmoustache": string;
    "textvisiblespace": string;
    "Elzdshfnc": string;
    "Elzsqfnw": string;
    "diagup": string;
    "Elzvrecto": string;
    "Elzcirfl": string;
    "Elzcirfr": string;
    "Elzcirfb": string;
    "Elzrvbull": string;
    "Elzsqfl": string;
    "Elzsqfr": string;
    "Elzsqfse": string;
    "bigcirc": string;
    "rightmoon": string;
    "mercury": string;
    "venus": string;
    "male": string;
    "jupiter": string;
    "saturn": string;
    "uranus": string;
    "neptune": string;
    "pluto": string;
    "aries": string;
    "taurus": string;
    "gemini": string;
    "cancer": string;
    "leo": string;
    "virgo": string;
    "libra": string;
    "scorpio": string;
    "sagittarius": string;
    "capricornus": string;
    "aquarius": string;
    "pisces": string;
    "quarternote": string;
    "eighthnote": string;
    "UpArrowBar": string;
    "DownArrowBar": string;
    "Elolarr": string;
    "Elorarr": string;
    "ElzRlarr": string;
    "ElzrLarr": string;
    "Elzrarrx": string;
    "LeftRightVector": string;
    "RightUpDownVector": string;
    "DownLeftRightVector": string;
    "LeftUpDownVector": string;
    "LeftVectorBar": string;
    "RightVectorBar": string;
    "RightUpVectorBar": string;
    "RightDownVectorBar": string;
    "DownLeftVectorBar": string;
    "DownRightVectorBar": string;
    "LeftUpVectorBar": string;
    "LeftDownVectorBar": string;
    "LeftTeeVector": string;
    "RightTeeVector": string;
    "RightUpTeeVector": string;
    "RightDownTeeVector": string;
    "DownLeftTeeVector": string;
    "DownRightTeeVector": string;
    "LeftUpTeeVector": string;
    "LeftDownTeeVector": string;
    "UpEquilibrium": string;
    "ReverseUpEquilibrium": string;
    "RoundImplies": string;
    "Elztfnc": string;
    "Elroang": string;
    "Elzddfnc": string;
    "Angle": string;
    "Elzlpargt": string;
    "ElzLap": string;
    "Elzdefas": string;
    "LeftTriangleBar": string;
    "NotLeftTriangleBar": string;
    "RightTriangleBar": string;
    "NotRightTriangleBar": string;
    "RuleDelayed": string;
    "Elxuplus": string;
    "ElzThr": string;
    "Elxsqcup": string;
    "ElzInf": string;
    "ElzSup": string;
    "ElzCint": string;
    "clockoint": string;
    "sqrint": string;
    "ElzTimes": string;
    "amalg": string;
    "ElzAnd": string;
    "ElzOr": string;
    "ElOr": string;
    "Elzminhat": string;
    "Equal": string;
    "nleqslant": string;
    "geqslant": string;
    "ngeqslant": string;
    "lessapprox": string;
    "gtrapprox": string;
    "lneq": string;
    "gneq": string;
    "lnapprox": string;
    "gnapprox": string;
    "lesseqqgtr": string;
    "gtreqqless": string;
    "eqslantless": string;
    "eqslantgtr": string;
    "NestedLessLess": string;
    "NotNestedLessLess": string;
    "NestedGreaterGreater": string;
    "NotNestedGreaterGreater": string;
    "precneqq": string;
    "succneqq": string;
    "precnapprox": string;
    "succnapprox": string;
    "subseteqq": string;
    "nsubseteqq": string;
    "supseteqq": string;
    "subsetneqq": string;
    "supsetneqq": string;
    "Elztdcol": string;
    "openbracketleft": string;
    "openbracketright": string;
    checkmark: string;
    maltese: string;
};
export declare type CharacterUnicode = keyof typeof characterUnicodeChart;
export declare function isCharacterUnicode(x: string): x is CharacterUnicode;
export declare const characterUnicode: ZeroArgsExpander;
